# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo "Github run number = ${{ github.run_number }}"

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
  
      # Runs a set of commands using the runners shell
      - name: Docker login
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      
      # Runs a set of commands using the runners shell
      - name: Echo package repository
        run: |
          echo "Package repository = "ghcr.io/nuance-internal/srm/${{ steps.extract_branch.outputs.branch }}/srm"
          
      # Runs a set of commands using the runners shell
      - name: Docker build (will fail)
        if:
          contains('
            refs/heads/dev
            refs/heads/staging
            refs/heads/production
            ', github.ref)
        run: |
          docker build . -t $image_name
          
      # Runs a set of commands using the runners shell
      - name: Docker logout
        if: ${{ always() }}
        run: |
          docker logout
